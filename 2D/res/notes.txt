上下左右没有 则相邻的四个角无影响力 index=46
上下左右只有一个 则相邻的四个角无影响力 index分别为42下，43右，44上，45左

出现两条边 如果是对边 相邻四个角无影响力，index分别为32上下 33左右
如果是临边，如果左和上同时出现，此时左上角有影响力，有左上角出现与不出现2种情况，其他临边相同，所以共有4*2=8种情况
分别对应index 34（右、下、右下） 35（右、下） 36（左、下、左下） 37（左、下） 38（左、上、左上） 39（左、上） 40（右、上、右上） 41（右、上）

出现3条边，考虑左上右同时出现，此时左上角和右上角有影响力，2个角有4种出现情况，所以共有4*4=16种情况，index对应16-31
16（上 右上 右 右下 下） 17（上 右 右下 下） 18（上 右上 右 下） 19（上 右 下） 
20（左 左下 下 右下 右） 21（左 左下 下 右） 22（左 下 右下 右） 23（左 下 右） 
24（上 左上 左 左下 下） 25（上 左上 左 下） 26（上 左 左下 下） 27（上 左 下） 
28（左 左上 上 右上 右） 29（左 上 右上 右） 30（左 左上 上 右） 31（左 上 右）

出现四条边 四个角有4*2=16种情况，index对应0-15
0（没有角） 1（左上） 2（右上） 3（左上 右上）
4（右下） 5（左上 右下） 6（右上 右下） 7（左上 右上 右下）
8（左下） 9（左上 左下） 10（左下 右上） 11（左下 左上 右上）
12（左下 右下） 13（左上 左下 右下） 14（左下 右上 右下） 15（左上 左下 右上 右下）

核心就是用二进制表达，边角共有8个，用一个8位的char即可。首先定义如下:4边4角各占一位
left         = 0000 0001
right        = 0000 0010
top          = 0000 0100
bottom       = 0000 1000
left_top     = 0001 0000
right_top    = 0010 0000
left_bottom  = 0100 0000
right_bottom = 1000 0000
那么当前4边4角的情况就可以上面的组合出来。
然后就可以用switch case表达47种情况，如
switch(state)
{
case 1111 1111: /*即4边4角都有*/ index = 0; break;
case 1100 1000: /*即左边和上边以及左上角都有*/ index = 38; break;
...
}


https://blog.csdn.net/gouki04/article/details/7107088
https://ghpages.kujohnln.com/2017/12/23/Auto-tiling-algorithm/

https://rxi.itch.io/tilekit